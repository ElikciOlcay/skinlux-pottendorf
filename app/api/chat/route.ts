import { NextRequest, NextResponse } from "next/server";
import { LISA_SYSTEM_PROMPT, LISA_KNOWLEDGE } from "@/lib/chat/knowledge-base";

// Enhanced system prompt for better AI responses
const ENHANCED_SYSTEM_PROMPT = `
${LISA_SYSTEM_PROMPT}

WICHTIGE DETAILS √úBER SKINLUX:
${JSON.stringify(LISA_KNOWLEDGE, null, 2)}

ANTWORT-RICHTLINIEN:
- Verwende Emojis sparsam aber passend (z.B. üíÜ‚Äç‚ôÄÔ∏è f√ºr Behandlungen, ‚ú® f√ºr Ergebnisse)
- Strukturiere l√§ngere Antworten mit Aufz√§hlungspunkten
- Stelle R√ºckfragen, um die beste Behandlung zu empfehlen
- Erw√§hne immer die kostenlose Erstberatung bei Unsicherheit
- Betone die Expertise des Teams
- Verwende einen warmen, einladenden Ton

BEISPIEL-ANTWORTEN:
- "Das freut mich, dass Sie sich f√ºr unsere Behandlungen interessieren! ‚ú®"
- "Gerne erkl√§re ich Ihnen..."
- "F√ºr Ihre individuellen Bed√ºrfnisse empfehle ich..."
`;

// Simple fallback responses when no API key is available
const FALLBACK_RESPONSES = {
    greeting: [
        "Hallo! Willkommen bei SkinLux. Ich bin Lisa, Ihre Beauty-Beraterin. Wie kann ich Ihnen helfen?",
        "Guten Tag! Ich bin Lisa von SkinLux. Womit kann ich Ihnen heute behilflich sein?"
    ],
    behandlung: [
        "Bei SkinLux bieten wir verschiedene Behandlungen an:\n\n‚Ä¢ Laser-Haarentfernung Damen & Herren (ab 35‚Ç¨)\n‚Ä¢ HydraFacial¬Æ (ab 169‚Ç¨)\n‚Ä¢ Premium Facials (ab 99‚Ç¨)\n\nKostenlose Erstberatung und Probebehandlung! Rufen Sie uns an: +43 660 57 21 403",
        "Unsere beliebtesten Behandlungen sind:\n\n‚Ä¢ Dauerhafte Laser-Haarentfernung f√ºr Damen & Herren\n‚Ä¢ HydraFacial¬Æ f√ºr sofort strahlende Haut\n‚Ä¢ Premium Facials mit Circadia Professional\n\nSparen Sie mit unseren Paketen! Kostenlose Beratung m√∂glich."
    ],
    preis: [
        "Laser-Haarentfernung Damen:\n\n‚Ä¢ Achseln: 55‚Ç¨\n‚Ä¢ Bikini Zone: 60‚Ç¨\n‚Ä¢ Beine komplett: 180‚Ç¨\n‚Ä¢ Gesicht komplett: 99‚Ç¨\n\nPakete: Small 200‚Ç¨ | Medium 270‚Ç¨ | Large 390‚Ç¨\n\nKostenlose Erstberatung!",
        "Laser-Haarentfernung Herren:\n\n‚Ä¢ Bartkontur: 50‚Ç¨\n‚Ä¢ Brust: 80‚Ç¨\n‚Ä¢ R√ºcken: 95‚Ç¨\n‚Ä¢ Beine komplett: 230‚Ç¨\n\nKostenlose Erstberatung! Rufen Sie uns an: +43 660 57 21 403",
        "HydraFacial¬Æ Preise:\n\n‚Ä¢ Signature (30 Min): 169‚Ç¨\n‚Ä¢ Signature + LED (50 Min): 189‚Ç¨\n‚Ä¢ Deluxe (50 Min): 259‚Ç¨\n‚Ä¢ Platinum (60 Min): 289‚Ç¨\n\nKostenlose Beratung m√∂glich!"
    ],
    termin: [
        "Terminvereinbarung ist ganz einfach:\n\nüì± Online: √úber unsere Website\nüìû Telefonisch: +43 660 57 21 403\n\n√ñffnungszeiten:\nDi-Fr: 09:00 - 18:00\nSa: 09:00 - 14:00",
        "Sie k√∂nnen jederzeit einen Termin vereinbaren:\n\n‚Ä¢ Online-Buchung rund um die Uhr\n‚Ä¢ Telefonisch w√§hrend der Gesch√§ftszeiten\n‚Ä¢ Kostenlose Erstberatung m√∂glich\n\nWir freuen uns auf Sie!"
    ],
    default: [
        "Vielen Dank f√ºr Ihre Nachricht! F√ºr detaillierte Informationen kontaktieren Sie uns gerne:\n\nüìû +43 660 57 21 403\nüìß info@skinlux.at\nüìç Franz-Mohshammer-Platz 2/1, Bischofshofen",
        "Ich helfe Ihnen gerne weiter! Bei spezifischen Fragen erreichen Sie uns:\n\n‚Ä¢ Telefon: +43 660 57 21 403\n‚Ä¢ Online-Terminbuchung auf unserer Website\n‚Ä¢ Pers√∂nliche Beratung im Studio"
    ]
};

function getSimpleResponse(message: string): string {
    const lowerMessage = message.toLowerCase();

    // Kategorisiere die Nachricht
    if (lowerMessage.includes("hallo") || lowerMessage.includes("hi") || lowerMessage.includes("guten")) {
        const responses = FALLBACK_RESPONSES.greeting;
        return responses[Math.floor(Math.random() * responses.length)];
    }

    if (lowerMessage.includes("behandlung") || lowerMessage.includes("was bieten") || lowerMessage.includes("angebot")) {
        const responses = FALLBACK_RESPONSES.behandlung;
        return responses[Math.floor(Math.random() * responses.length)];
    }

    if (lowerMessage.includes("preis") || lowerMessage.includes("kostet") || lowerMessage.includes("kosten")) {
        const responses = FALLBACK_RESPONSES.preis;
        return responses[Math.floor(Math.random() * responses.length)];
    }

    if (lowerMessage.includes("termin") || lowerMessage.includes("buchen") || lowerMessage.includes("zeit")) {
        const responses = FALLBACK_RESPONSES.termin;
        return responses[Math.floor(Math.random() * responses.length)];
    }

    // Default response
    const responses = FALLBACK_RESPONSES.default;
    return responses[Math.floor(Math.random() * responses.length)];
}

// Store conversation history
interface ChatMessage {
    role: "user" | "assistant" | "system";
    content: string;
}
let conversationHistory: ChatMessage[] = [];

export async function POST(request: NextRequest) {
    try {
        const { message } = await request.json();

        // Check if OpenAI API key is configured
        const apiKey = process.env.OPENAI_API_KEY;

        if (!apiKey || apiKey === "sk-YOUR-API-KEY-HERE" || !apiKey.startsWith("sk-")) {
            // Use simple fallback responses
            console.log("No valid OpenAI API key found, using fallback responses");
            const response = getSimpleResponse(message);

            return NextResponse.json({
                message: response
            });
        }

        // If API key exists, use OpenAI
        try {
            // Add user message to history
            conversationHistory.push({ role: "user", content: message });

            // Keep only last 10 messages to avoid token limits
            if (conversationHistory.length > 10) {
                conversationHistory = conversationHistory.slice(-10);
            }

            const openaiResponse = await fetch("https://api.openai.com/v1/chat/completions", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${apiKey}`
                },
                body: JSON.stringify({
                    model: "gpt-4o-mini", // G√ºnstiger und schneller als gpt-3.5-turbo
                    messages: [
                        {
                            role: "system",
                            content: ENHANCED_SYSTEM_PROMPT
                        },
                        ...conversationHistory
                    ],
                    temperature: 0.8, // Etwas kreativer
                    max_tokens: 600, // Mehr Tokens f√ºr ausf√ºhrlichere Antworten
                    presence_penalty: 0.6, // Vermeidet Wiederholungen
                    frequency_penalty: 0.3 // F√∂rdert Abwechslung
                })
            });

            if (!openaiResponse.ok) {
                const error = await openaiResponse.json();
                console.error("OpenAI API error:", error);
                throw new Error("OpenAI API error");
            }

            const data = await openaiResponse.json();
            const aiMessage = data.choices[0].message.content;

            // Add AI response to history
            conversationHistory.push({ role: "assistant", content: aiMessage });

            return NextResponse.json({
                message: aiMessage
            });

        } catch (openaiError) {
            console.error("OpenAI API error:", openaiError);
            // Fallback to simple responses
            const response = getSimpleResponse(message);

            return NextResponse.json({
                message: response + "\n\n(Hinweis: Ich verwende momentan vordefinierte Antworten. F√ºr eine pers√∂nliche Beratung kontaktieren Sie uns gerne direkt.)"
            });
        }

    } catch (error) {
        console.error("Chat API error:", error);

        return NextResponse.json({
            message: "Entschuldigung, es gab einen technischen Fehler. Bitte kontaktieren Sie uns direkt unter +43 660 57 21 403."
        });
    }
} 